import numpy as np
import pygame
import glob
import os
import sys
import weakref
from pygame.locals import K_ESCAPE

try:
    sys.path.append(glob.glob('../carla/dist/carla-*%d.%d-%s.egg' % (
        sys.version_info.major,
        sys.version_info.minor,
        'win-amd64' if os.name == 'nt' else 'linux-x86_64'))[0])
except IndexError:
    pass

import carla

import random
import time


VIEW_WIDTH = 1280
VIEW_HEIGHT = 720
VIEW_FOV = 120

def handle_image(disp, image):
    x1, y1 = 120, 130
    x2, y2 = 200, 300
    width, height = abs(x2-x1), abs(y2-y1)
    array = np.frombuffer(image.raw_data, dtype=np.dtype('uint8'))
    array = np.reshape(array, (image.height, image.width, 4))
    array = array[:, :, :3]
    array = array[:,:,::-1]
    font = pygame.font.SysFont(None, 48)
    text_surface = font.render("Hello World", True, (255, 0, 0))
    text_position = (min(x1,x2), min(y1,y2)-30)
    square_position = (min(x1,x2), min(y1,y2))
    array = array.swapaxes(0,1)
    surface = pygame.surfarray.make_surface(array)
    disp.blit(surface, (0,0))
    pygame.draw.rect(display, (0, 255, 0), (square_position[0], square_position[1], width, height), 3)
    disp.blit(text_surface, text_position)
    
    pygame.display.flip()

actor_list = []

# In this tutorial script, we are going to add a vehicle to the simulation
# and let it drive in autopilot. We will also create a camera attached to
# that vehicle, and save all the images generated by the camera to disk.
pygame.init()
pygame.font.init()

client = carla.Client('localhost', 2000)
client.set_timeout(2.0)

# 클라이언트가 생기면 현재 실행 중인 월드를 검색할 수 있다.
world = client.get_world()

tm = client.get_trafficmanager()
#tm.set_synchronous_mode(True)
tm_port = tm.get_port()

# 시나리오 실행을 위해 autopilot 루트 설정
spawn_points = world.get_map().get_spawn_points()
route_point = [52, 104, 115, 67, 140, 10, 71, 60, 143, 149, 92, 21, 105, 45, 47, 134, 50]
route = []
for ind in route_point:
    route.append(spawn_points[ind].location)
#===========================================================================================
# pedestrian code

world.set_pedestrians_seed(1235)
ped_bp = random.choice(world.get_blueprint_library().filter("walker.pedestrian.*"))

ped_start_location = carla.Location(x=-34.3, y=2.7, z=0.2)
ped_start_rotation = carla.Rotation(pitch=-0.3, yaw=180.0, roll=0.0)
start_trans = carla.Transform(ped_start_location, ped_start_rotation)

ped_end_location = carla.Location(x=-60.3, y=2.7, z=0.2)
ped_end_rotation = carla.Rotation(pitch=-0.3, yaw=-180.0, roll=0.0)
dst_trans = carla.Transform(ped_end_location, ped_end_rotation)

ped = world.spawn_actor(ped_bp, start_trans)
walker_controller_bp = world.get_blueprint_library().find('controller.ai.walker')
controller = world.spawn_actor(walker_controller_bp, carla.Transform(), ped)
controller.start()
controller.set_max_speed(2)

# adding an actor to an actor list
actor_list.append(ped)
actor_list.append(controller)
#===========================================================================================

 #시뮬레이션 내에서 사용 가능한 모든 차량 블루프린트를 가져오는 데 사용됩니다
bp_lib = world.get_blueprint_library()
vehicle_bp = bp_lib.filter('vehicle.tesla.model3')[0]



transform = carla.Transform()

transform.location.x = 0
transform.location.y = 13
transform.location.z = 0.5

transform.rotation.yaw = 180
transform.rotation.pitch = 0
transform.rotation.roll = 0
vehicle = world.spawn_actor(vehicle_bp, spawn_points[50])

#서버 카메라
spectator = world.get_spectator()
sp_transform = carla.Transform(transform.location + carla.Location(z=30, x=-25),
    carla.Rotation(yaw=90, pitch=-90))
spectator.set_transform(sp_transform)

control = carla.VehicleControl()
control.throttle = 0.3
vehicle.apply_control(control)


# 차량 카메라 위치
rgb_camera_bp = world.get_blueprint_library().find('sensor.camera.rgb')
rgb_camera_bp.set_attribute('image_size_x', str(VIEW_WIDTH))
rgb_camera_bp.set_attribute('image_size_y', str(VIEW_HEIGHT))
rgb_camera_bp.set_attribute('fov', str(VIEW_FOV))
cam_transform = carla.Transform(carla.Location(x=0.3, z=1.7))
camera = world.spawn_actor(rgb_camera_bp, 
    cam_transform,
    attach_to=vehicle,
    attachment_type=carla.AttachmentType.Rigid)

display = pygame.display.set_mode(
        (1280, 720),
        pygame.HWSURFACE | pygame.DOUBLEBUF
    )

camera.listen(lambda image: handle_image(display, image))


vehicle.set_autopilot(True, tm_port)
tm.ignore_lights_percentage(vehicle,100)
tm.set_path(vehicle, route)
while True :
    pygame.event.pump()
    keys = pygame.key.get_pressed()

    #press esc to escape loop
    if keys[K_ESCAPE]:
            break


camera.destroy()
vehicle.destroy()
ped.destroy()
pygame.quit()
pygame.font.quit()